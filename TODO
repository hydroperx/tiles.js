- [ ] Challenges: https://softwareengineering.stackexchange.com/q/458507/462552
- [ ] Consider using a Cassowary constrant solver: https://www.npmjs.com/package/@lume/kiwi
  - Basis: https://chatgpt.com/c/687f93fd-1354-8001-acb8-734508969385
  - Kiwi API: https://github.com/lume/kiwi/blob/HEAD/docs/Kiwi.md

# Arrow navigation

- [ ] Allow browsing tile focus through the arrows (input action navigateLeft/Right/Up/Down).
  - [ ] Requires an option so that the library can decide whether it has the responsibility for navigating the focus.

# Tile dragging

- [ ] Placeholder 
  - [ ] Insert ghost tile
  - [ ] `.refreshNonOverlappingConstraints()`

# Transition

While rearranging tiles:

(To stop current transition, get the interpolated cascading value of `top`/`left` and set it as the current, then run a very short timeout (5ms) to proceed.)

- [ ] From -Y top to +Y (e.g. ignore X transition when changing both XY)
- [ ] From +Y bottom to -Y (e.g. ignore X transition when changing both XY)

# Clipping

- [ ] Set style `overflow: hidden` for group's tiles. (Won't affect the dragging-flying tile anyways.)

# Disabling pointer events

- [ ] When disabling pointer events: for everything, set `pointer-events: none;` for the Tiles container, and set `pointer-events: auto;` for the specific element that should have them enabled.

# API

- [ ] `Tiles#inlineGroupsAvailable()` (for the vertical layout) - Returns the number of inline groups available for the given width (either in `px` or `em`).
- [ ] `Tiles#groupWidth()` (for the vertical layout)
  - [ ] On change, refresh Cassowary X-constraints on layout's tiles. `refreshMaxConstraints()`
- [ ] `Tiles#inlineGroups()` (for the vertical layout)
- [ ] `Tiles#clear()` - Clears attached groups and tiles.
- [ ] `Tiles#addGroup()`
- [ ] `Tiles#addTile()`
  - [ ] Call `refreshNonOverlappingConstraints()` for the respective group.
  - [ ] Call `layout.rearrange()`
- [ ] `Tiles#removeGroup()`
- [ ] `Tiles#removeTile()`
  - [ ] Clear constraints from the specified tile.
  - [ ] Call `refreshNonOverlappingConstraints()` for the respective group.
  - [ ] Call `layout.rearrange()`
- [ ] `Tiles#renameGroup()`
- [ ] `Tiles#moveGroup()`
- [ ] `Tiles#resizeTile()`
  - [ ] Call `.refreshMaxConstraints()` for the specified tile after resizing it.
  - [ ] Call `.refreshNonOverlappingConstraints()` for the respective group.
  - [ ] Call `layout.rearrange()`
- [ ] `Tiles#moveTile()`
  - [ ] Call `layout.rearrange()`

# Tile selection

- [ ] Allow (un)checking tiles
  - [ ] through touch long hold
  - [ ] through click long hold
  - [ ] if currently in selection mode, through a touch tap
  - [ ] if currently in selection mode, through a click
  - [ ] through the API
- [ ] Disable tile (un)checking depending on the `selectionEnabled` option.
- [ ] Provide API method for changing the `selectionEnabled` option.
- [ ] Provide API method for retrieving the IDs of checked tiles.
- [ ] Provide selection change events.

# Drag enabled

- [ ] Disable drag-n-drop (both of tiles and groups) depending on the `dragEnabled` option.
- [ ] Provide API method for changing the `dragEnabled` option.

# Interactivity

- [ ] When dragging a tile, disable pointer events on other tiles.
- [ ] When stopping dragging a tile, enable pointer events on other tiles back.
- [ ] When dragging a group, disable pointer events on all tiles.
- [ ] When stopping dragging a group, enable pointer events back on all tiles back.

# Tiles container

- [ ] Horizontal: width is infinite and groups are stacked horizontally; prefer to contribute tiles at vertical end.
- [ ] Vertical: width is fixed and consists of N inline groups; prefer to contribute tiles at horizontal end.
- [ ] While a tile is being dragged, it is moved out of the group div temporarily and appears a direct child of the Tiles container.

# While dragging

- [ ] In a horizontal container, if dragging tile far orthogonal axis, then switch to far view.
  - [ ] After that, if dragging the tile back to the center, switch back to near view and scroll smoothly to the closest group (look at the Tiles container's nearest horizontally-scrollable parent).

# Zoom

- [ ] Near view and far view modes. Vertical container is always in near view.
- [ ] Allow to zoom in/out switching between near/far view in a horizontal container, either through <kbd>Ctrl + Plus</kbd>, <kbd>Ctrl + Minus</kbd> or pinch gesture.
- [ ] When in far view, user is not allowed to interact with tiles, but rather with groups, allowing to drag-n-drop groups.

# Representation

- [ ] Groups have `position: absolute`
- [ ] GroupTiles have `position: relative`
- [ ] Groups contain groupLabel and groupTiles
- [ ] Tiles are `button` elements (of `position: absolute`) containing a tile content element. During dragging, tile contents are slightly scaled down rather than the tile's button itself.